{"version":3,"sources":["components/Nav.js","utils/API.js","components/BookListItem.js","components/BookList.js","pages/Saved.js","components/SearchBar.js","pages/Search.js","App.js","registerServiceWorker.js","index.js"],"names":["Nav","className","axios","get","id","delete","bookData","post","BookListItem","props","book","key","title","authors","join","type","onClick","event","API","imageLinks","description","previewLink","then","result","console","log","catch","err","data_bookId","_id","target","getAttribute","window","open","src","thumbnail","alt","BookList","items","map","Saved","useState","savedItems","setSavedItems","useEffect","data","SearchBar","onSubmit","htmlFor","style","fontSize","onChange","width","Search","term","searchTerm","setSearchTerm","searchResults","setSearchResults","value","preventDefault","response","e","volumeInfo","App","exact","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3990644b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Nav() {\r\n    return (\r\n        <nav className='navbar navbar-dark bg-dark'>\r\n            <div className='navbar-brand'>Search Google Books</div>\r\n        </nav>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    // Gets all books\r\n    getBooks: function () {\r\n        return axios.get(\"/api/books\");\r\n    },\r\n\r\n    deleteBook: function(id) {\r\n        return axios.delete('/api/books/' + id);\r\n    },\r\n\r\n    // Saves a book to the database\r\n    saveBook: function (bookData) {\r\n        return axios.post(\"/api/books\", bookData);\r\n    }\r\n};","import React from 'react';\r\n\r\nimport API from '../utils/API';\r\n\r\nimport './style.css'\r\n\r\nexport default function BookListItem(props) {\r\n\r\n    const handleSave = (event) => {\r\n        API.saveBook({\r\n            title: props.book.title,\r\n            authors: props.book.authors,\r\n            imageLinks: props.book.imageLinks || '',\r\n            description: props.book.description,\r\n            previewLink: props.book.previewLink\r\n        }).then( (result) => {\r\n            console.log(result);\r\n        }).catch( (err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    const handleView = (event) => {\r\n        window.open(props.book.previewLink)\r\n    }\r\n\r\n    const handleDelete = (event) => {\r\n        API.deleteBook(event.target.getAttribute('data_bookId')).then( (result) => {\r\n            console.log(result);\r\n        }).catch( (err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    return (\r\n        props.book ?\r\n        <li className='list-group-item shadow-sm' key={props.book.title}>\r\n            <div className='row mb-2'>\r\n                <div className='col-md-8'>\r\n                    <h3>{props.book.title}</h3>\r\n                    <h5 className='author-display'>{props.book.authors ? props.book.authors.join(', ') : 'No authors attributed'}</h5>\r\n                </div>\r\n                <div className='col-md-4 d-flex align-items-center justify-content-center'>\r\n                    {\r\n                        props.type === 'search' ? \r\n                        <button className='btn btn-success' onClick={handleSave}>Save</button> :\r\n                        <button className='btn btn-danger' data_bookId={props.book._id} onClick={handleDelete}>Remove</button>\r\n                    }\r\n                    \r\n                    <button className='btn btn-info' onClick={handleView}>View</button>\r\n                </div>\r\n            </div>\r\n            <div className='br mb-2'></div>\r\n            <div className='row'>\r\n                <div className='col d-flex description-content'>\r\n                    <img \r\n                        src={props.book.imageLinks ? \r\n                            props.book.imageLinks.thumbnail : \r\n                            'https://via.placeholder.com/128x195.png?text=No+thumbnail+available'} \r\n                            alt={props.book.title + '-thumbnail'}></img>\r\n\r\n\r\n                    <p>{props.book.description || 'No description available' }</p>\r\n                </div>\r\n            </div>\r\n        </li> : null\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport BookListItem from '../components/BookListItem';\r\n\r\nimport './style.css'\r\n\r\nexport default function BookList(props) {\r\n    return (\r\n        <div className='container'>\r\n            <ul className='list-group-item shadow-sm' id='results-list'>\r\n                {\r\n                    props.items.map( (book) => {\r\n                        return <BookListItem type={props.type} book={book}/>\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport Nav from '../components/Nav';\r\nimport BookList from '../components/BookList';\r\nimport API from '../utils/API';\r\n\r\nexport default function Saved() {\r\n\r\n    const [savedItems, setSavedItems] = useState();\r\n\r\n    function loadSavedBooks() {\r\n        API.getBooks().then( (result) => {\r\n            setSavedItems(result.data);\r\n            console.log(result)\r\n        }).catch( (err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    useEffect( () => {\r\n        loadSavedBooks();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Nav />\r\n            <h2>My Saved Books</h2>\r\n            <BookList type='saved' items={savedItems || []} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport './style.css';\r\n\r\nexport default function SearchBar(props) {\r\n    return (\r\n        <div className='container mt-5'>\r\n            <form id='search-form' className='row input-group shadow-sm' onSubmit={props.onSubmit} >\r\n                <label className='align-middle text-center form-label col-sm-2 col-form-label' \r\n                    htmlFor='book-search-field' style={{fontSize: '20px'}}>Search</label>\r\n                <div className='col-sm-10 input-group'>\r\n                    <input className='form-control form-control-lg' \r\n                        id='book-search-field' type='text' \r\n                        onChange={props.onChange}></input>\r\n                    <button className='btn btn-primary' type='button' style={{width: '80px'}}>Go</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport SearchBar from '../components/SearchBar';\r\nimport Nav from '../components/Nav';\r\nimport BookList from '../components/BookList';\r\n\r\nimport axios from \"axios\";\r\n\r\n// import API from '../utils/API';\r\n\r\nexport default function Search() {\r\n    const key = 'AIzaSyD-TePTp6M8p6WAz5CLj1CwdwdQPzEHYTM'\r\n    const url = 'https://www.googleapis.com/books/v1/volumes?maxResults=25&orderBy=relevance&q=';\r\n    const [searchTerm, setSearchTerm] = useState({ term: '' });\r\n    const [searchResults, setSearchResults] = useState();\r\n    \r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        axios.get(url + searchTerm.term).then( (response) => {\r\n            setSearchResults(response.data.items.map( e =>  e.volumeInfo ));\r\n            console.log(response);\r\n        }).catch( (err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    const handleInput = (event) => {\r\n        setSearchTerm({term: event.target.value});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Nav />\r\n            <SearchBar value={searchTerm} onSubmit={handleSubmit} onChange={handleInput}/>\r\n            {searchResults ? <BookList type='search' items={searchResults} /> : null}\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport \"./App.css\";\r\n\r\nimport Saved from './pages/Saved';\r\nimport Search from './pages/Search';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route exact path={['/', '/search']}>\r\n            <Search />\r\n          </Route>\r\n          <Route exact path={['/saved']}>\r\n            <Saved />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}